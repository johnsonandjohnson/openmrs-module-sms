{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST API for SMS Module.",
    "version" : "v1",
    "title" : "SMS Module REST API"
  },
  "basePath" : "/openmrs/ws",
  "tags" : [ {
    "name" : "REST API to fetch SMS records"
  }, {
    "name" : "REST API to handle events triggered from whatApp"
  }, {
    "name" : "REST API to handle http requests sent by SMS providers"
  }, {
    "name" : "REST API to handle message delivery status updates sent by SMS providers"
  }, {
    "name" : "REST API to handle outgoing requests"
  }, {
    "name" : "REST API to schedule AdHoc SMSes based on data from different input sources"
  }, {
    "name" : "REST API to send and receive templates/configs to/from the UI"
  } ],
  "paths" : {
    "/scheduleAdHocSMS" : {
      "post" : {
        "tags" : [ "REST API to schedule AdHoc SMSes based on data from different input sources" ],
        "summary" : "None",
        "description" : "Schedules AdHoc SMSes based on data from file",
        "operationId" : "scheduleAdHocSMSesFromFile",
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "file",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        }, {
          "name" : "sheetName",
          "in" : "query",
          "description" : "sheetName",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AdHoc SMSes have been successfully scheduled"
          },
          "500" : {
            "description" : "Failed to schedule AdHoc SMSes"
          }
        }
      }
    },
    "/scheduleAdHocSMS/{dataSetUuid}" : {
      "post" : {
        "tags" : [ "REST API to schedule AdHoc SMSes based on data from different input sources" ],
        "summary" : "None",
        "description" : "Schedules AdHoc SMSes based on data from SQL data set",
        "operationId" : "scheduleAdHocSMSesFromDataSet",
        "parameters" : [ {
          "name" : "dataSetUuid",
          "in" : "path",
          "description" : "dataSetUuid",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AdHoc SMSes have been successfully scheduled"
          },
          "500" : {
            "description" : "Failed to schedule AdHoc SMSes"
          }
        }
      }
    },
    "/sms/configs" : {
      "get" : {
        "tags" : [ "REST API to send and receive templates/configs to/from the UI" ],
        "summary" : "Retrieves all configurations for the UI",
        "description" : "Retrieves all configurations for the UI",
        "operationId" : "getConfigs",
        "responses" : {
          "200" : {
            "description" : "On successful retrieving all configurations",
            "schema" : {
              "$ref" : "#/definitions/Configs"
            }
          },
          "400" : {
            "description" : "Error in retrieving all configurations"
          },
          "500" : {
            "description" : "Failure to retrieve all configurations"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to send and receive templates/configs to/from the UI" ],
        "summary" : "Saves the provided configurations, overriding old ones",
        "description" : "Saves the provided configurations, overriding old ones",
        "operationId" : "setConfigs",
        "parameters" : [ {
          "in" : "body",
          "name" : "configs",
          "description" : "All configurations to save",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Configs"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful saving provided configurations",
            "schema" : {
              "$ref" : "#/definitions/Configs"
            }
          },
          "400" : {
            "description" : "Error in saving provided configurations"
          },
          "500" : {
            "description" : "Failure to save provided configurations"
          }
        }
      }
    },
    "/sms/incoming/{configName}" : {
      "post" : {
        "tags" : [ "REST API to handle http requests sent by SMS providers" ],
        "summary" : "Handles an incoming SMS notification",
        "description" : "Handles an incoming SMS notificationcoming from the provider",
        "operationId" : "handleIncoming",
        "parameters" : [ {
          "name" : "configName",
          "in" : "path",
          "description" : "The name of the configuration that should handle the SMS",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "The request params coming from the provider",
          "required" : true,
          "type" : "object"
        }, {
          "in" : "body",
          "name" : "bodyParam",
          "description" : "The request body params",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful handling of an incoming SMS"
          },
          "400" : {
            "description" : "Error in an incoming SMS"
          },
          "500" : {
            "description" : "Failure to handle an incoming SMS"
          }
        }
      }
    },
    "/sms/log" : {
      "get" : {
        "tags" : [ "REST API to fetch SMS records" ],
        "summary" : "Fetch SMS records",
        "description" : "Fetch SMS records",
        "operationId" : "getAll",
        "parameters" : [ {
          "in" : "body",
          "name" : "gridSettings",
          "description" : "Models the audit log filter settings UI",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GridSettings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful fetching SMS records",
            "schema" : {
              "$ref" : "#/definitions/SmsRecordsPageable"
            }
          },
          "400" : {
            "description" : "Error while fetching SMS records"
          },
          "500" : {
            "description" : "Failure to fetch SMS records"
          }
        }
      }
    },
    "/sms/mds-databrowser-config" : {
      "get" : {
        "tags" : [ "REST API to send and receive templates/configs to/from the UI" ],
        "summary" : "Fetch custom UI settings",
        "description" : "Fetch custom UI settings",
        "operationId" : "getCustomUISettings",
        "responses" : {
          "200" : {
            "description" : "On successful fetching custom UI settings",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in fetching custom UI settings"
          },
          "500" : {
            "description" : "Failure to fetch custom UI settings"
          }
        }
      }
    },
    "/sms/send" : {
      "post" : {
        "tags" : [ "REST API to handle outgoing requests" ],
        "summary" : "Sends an outgoing SMS",
        "description" : "Sends an outgoing SMS",
        "operationId" : "sendSms",
        "parameters" : [ {
          "in" : "body",
          "name" : "outgoingSms",
          "description" : "The definition of the SMS to send",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OutgoingSms"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful sending an outgoing SMS",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in an outgoing SMS"
          },
          "404" : {
            "description" : "There are no SMS configs on this server"
          },
          "500" : {
            "description" : "Failure to send an outgoing SMS"
          }
        }
      }
    },
    "/sms/status/{configName}" : {
      "post" : {
        "tags" : [ "REST API to handle message delivery status updates sent by SMS providers" ],
        "summary" : "Publishing an OpenMRS Event and creating a record in the database",
        "description" : "Publishing an OpenMRS Event and creating a record in the database",
        "operationId" : "handle",
        "parameters" : [ {
          "name" : "configName",
          "in" : "path",
          "description" : "The name of the configuration for the provider that is sending the update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "Params of the request sent by the provider",
          "required" : true,
          "type" : "object"
        }, {
          "in" : "body",
          "name" : "bodyParam",
          "description" : "The request body param",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful publishing an OpenMRS Event"
          },
          "400" : {
            "description" : "Error in publishing an OpenMRS Event"
          },
          "500" : {
            "description" : "Failure to publish an OpenMRS Event"
          }
        }
      }
    },
    "/sms/templates" : {
      "get" : {
        "tags" : [ "REST API to send and receive templates/configs to/from the UI" ],
        "summary" : "Returns all the templates for the UI",
        "description" : "Returns all the templates for the UI",
        "operationId" : "getTemplates",
        "responses" : {
          "200" : {
            "description" : "On successful returning all the templates",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Error in returning all the templates"
          },
          "500" : {
            "description" : "Failure to return all the templates"
          }
        }
      }
    },
    "/sms/templates/import" : {
      "post" : {
        "tags" : [ "REST API to send and receive templates/configs to/from the UI" ],
        "summary" : "Imports templates from the uploaded file",
        "description" : "Imports templates from the uploaded file",
        "operationId" : "importTemplates",
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "the file containing the templates",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful importing templates"
          },
          "400" : {
            "description" : "Error in importing templates"
          },
          "500" : {
            "description" : "Failure to import templates"
          }
        }
      }
    },
    "/whatsapp/{configName}" : {
      "post" : {
        "tags" : [ "REST API to handle events triggered from whatApp" ],
        "summary" : "Handles events triggered from whatApp",
        "description" : "Handles events triggered from whatApp",
        "operationId" : "handle",
        "parameters" : [ {
          "name" : "configName",
          "in" : "path",
          "description" : "The name of the configuration",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "bodyParam",
          "description" : "The request body param",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful handling events triggered from whatApp"
          },
          "400" : {
            "description" : "Error in handling events triggered from whatApp"
          },
          "500" : {
            "description" : "Failure to handle events triggered from whatApp"
          }
        }
      }
    }
  },
  "definitions" : {
    "Config" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "excludeLastFooter" : {
          "type" : "boolean",
          "default" : false
        },
        "splitHeader" : {
          "type" : "string"
        },
        "splitFooter" : {
          "type" : "string"
        },
        "templateName" : {
          "type" : "string"
        },
        "props" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigProp"
          }
        },
        "automaticResponseScript" : {
          "type" : "string"
        }
      }
    },
    "ConfigProp" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Configs" : {
      "type" : "object",
      "properties" : {
        "defaultConfigName" : {
          "type" : "string"
        },
        "configList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Config"
          }
        },
        "defaultConfig" : {
          "$ref" : "#/definitions/Config"
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "GridSettings" : {
      "type" : "object",
      "properties" : {
        "rows" : {
          "type" : "integer",
          "format" : "int32"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortColumn" : {
          "type" : "string"
        },
        "sortDirection" : {
          "type" : "string"
        },
        "config" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "messageContent" : {
          "type" : "string"
        },
        "timeFrom" : {
          "type" : "string"
        },
        "timeTo" : {
          "type" : "string"
        },
        "deliveryStatus" : {
          "type" : "string"
        },
        "providerStatus" : {
          "type" : "string"
        },
        "smsDirection" : {
          "type" : "string"
        },
        "openMrsId" : {
          "type" : "string"
        },
        "providerId" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "MultipartFile" : {
      "type" : "object",
      "properties" : {
        "originalFilename" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        },
        "bytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        }
      }
    },
    "OutgoingSms" : {
      "type" : "object",
      "properties" : {
        "recipients" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "message" : {
          "type" : "string"
        },
        "config" : {
          "type" : "string"
        },
        "deliveryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "openMrsId" : {
          "type" : "string"
        },
        "providerId" : {
          "type" : "string"
        },
        "failureCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customParams" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "SmsRecordDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "providerStatus" : {
          "type" : "string"
        },
        "openMrsId" : {
          "type" : "string"
        },
        "providerId" : {
          "type" : "string"
        },
        "deliveryStatus" : {
          "type" : "string"
        },
        "messageContent" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string"
        },
        "config" : {
          "type" : "string"
        },
        "smsDirection" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "modificationDate" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "creator" : {
          "type" : "string"
        }
      }
    },
    "SmsRecordsPageable" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalRecords" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SmsRecordDTO"
          }
        }
      }
    }
  }
}