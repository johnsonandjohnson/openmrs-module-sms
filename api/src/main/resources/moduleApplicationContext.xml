<?xml version="1.0" encoding="UTF-8"?>

<!-- Beans to add to the current Application context definition -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee
            http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:component-scan base-package="org.openmrs.module.sms"/>

    <bean id="sms.SmsRecordDao" class="org.openmrs.module.sms.api.dao.impl.SmsRecordDaoImpl">
        <property name="dbSessionFactory">
            <ref bean="dbSessionFactory"/>
        </property>
    </bean>

    <!-- Wraps SmsService methods in DB transactions and OpenMRS interceptors,
    which set audit info like dateCreated, changedBy, etc.-->
    <bean id="sms.SmsService"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.sms.api.service.SmsServiceImpl">
                <constructor-arg index="0">
                    <ref local="sms.eventService"/>
                </constructor-arg>
                <constructor-arg index="1">
                    <ref local="sms.schedulerService"/>
                </constructor-arg>
                <constructor-arg index="2">
                    <ref local="templateService"/>
                </constructor-arg>
                <constructor-arg index="3">
                    <ref local="sms.configService"/>
                </constructor-arg>
                <constructor-arg index="4">
                    <ref local="sms.SmsRecordDao"/>
                </constructor-arg>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <!-- Adds SmsService to OpenMRS context so it can be accessed
    calling Context.getService(SmsService.class) -->
    <bean parent="serviceContext">
        <property name="moduleService">
            <list>
                <value>org.openmrs.module.sms.api.service.SmsService</value>
                <ref bean="sms.SmsService"/>
            </list>
        </property>
    </bean>

    <!-- Wraps SettingsService methods in DB transactions and OpenMRS interceptors,
    which set audit info like dateCreated, changedBy, etc.-->
    <bean id="sms.SettingsService"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.sms.api.service.SmsSettingsServiceImpl">
                <property name="templateService">
                    <ref local="templateService"/>
                </property>
                <property name="configService">
                    <ref local="sms.configService"/>
                </property>
                <property name="templateJsonParser">
                    <ref local="sms.templateJsonParser"/>
                </property>
                <property name="settingsManagerService">
                    <ref local="sms.settings.manager"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <!-- Adds SettingsService to OpenMRS context so it can be accessed
    calling Context.getService(SettingsService.class) -->
    <bean parent="serviceContext">
        <property name="moduleService">
            <list>
                <value>org.openmrs.module.sms.api.service.SmsSettingsService</value>
                <ref bean="sms.SettingsService"/>
            </list>
        </property>
    </bean>

    <bean id="multiThreadedHttpConnectionManager"
          class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager"/>

    <bean id="commonsHttpClient" class="org.apache.commons.httpclient.HttpClient">
        <constructor-arg ref="multiThreadedHttpConnectionManager"/>
    </bean>

    <bean id="sms.configService" class="org.openmrs.module.sms.api.service.ConfigServiceImpl">
        <constructor-arg index="0">
            <ref local="sms.settings.manager"/>
        </constructor-arg>
    </bean>

    <bean id="sms.settings.manager" class="org.openmrs.module.sms.api.service.SettingsManagerServiceImpl"/>

    <bean id="sms.eventService" class="org.openmrs.module.sms.api.service.SmsEventServiceImpl"/>

    <bean id="sms.schedulerService" class="org.openmrs.module.sms.api.service.SmsSchedulerServiceImpl">
        <property name="schedulerService" ref="schedulerService"/>
    </bean>

    <bean id="templateService" class="org.openmrs.module.sms.api.service.TemplateServiceImpl">
        <constructor-arg index="0">
            <ref local="sms.settings.manager"/>
        </constructor-arg>
    </bean>

    <bean id="sms.SmsHttpService" class="org.openmrs.module.sms.api.http.SmsHttpService">
        <property name="smsRecordDao">
            <ref local="sms.SmsRecordDao"/>
        </property>
        <property name="templateService">
            <ref local="templateService"/>
        </property>
        <property name="alertService" ref="alertService"/>
        <property name="commonsHttpClient">
            <ref local="commonsHttpClient"/>
        </property>
        <property name="configService">
            <ref local="sms.configService"/>
        </property>
        <property name="smsEventService">
            <ref local="sms.eventService"/>
        </property>
    </bean>

    <bean id="smsAuditService" class="org.openmrs.module.sms.api.audit.SmsAuditServiceImpl">
        <property name="smsRecordDao">
            <ref local="sms.SmsRecordDao"/>
        </property>
    </bean>

    <bean id="sms.templateJsonParser" class="org.openmrs.module.sms.api.json.TemplateJsonParser">
        <property name="templateService">
            <ref local="templateService"/>
        </property>
    </bean>

    <bean id="sms.statusSmsEventListener" class="org.openmrs.module.sms.api.event.StatusSmsEventListener"/>

    <bean id="sms.sendSmsEventListener" class="org.openmrs.module.sms.api.event.SendSmsEventListener"/>

</beans>
